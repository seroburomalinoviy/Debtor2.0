from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text

from app.logic.orm import User
from app.utils.room import room_buttons


async def cmd_start(message: types.Message, state: FSMContext):
    await state.finish()
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    user = User(str(message.from_user.id))
    buttons = ['–í–æ–π—Ç–∏ –≤ –∫–æ–º–Ω–∞—Ç—É', '–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É']
    keyboard.add(*buttons)
    if user.get_user():
        keyboard.add('–í–µ—Ä–Ω—É—Ç—å—Å—è')
        mes = f"""
        –¢—ã –≤ –ü—Ä–∏—Ö–æ–∂–µ–π.\n\n–°—Ç–æ–∏—à—å —É –∫–æ–º–Ω–∞—Ç—ã\nüö™ {user.current_room.split(' ')[0]} \n
[–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ]
                """
    else:
        mes = f"""
–ü—Ä–∏–≤–µ—Ç, –≤—ã –ø–æ–ø–∞–ª–∏ –≤ –ü—Ä–∏—Ö–æ–∂–µ—é! \n
–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤–æ–π—Ç–∏ –≤ –∫–æ–º–Ω–∞—Ç—É, –≤–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –≤–≤–µ—Å—Ç–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã –∏ –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞.\n
–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—é –∫–æ–º–Ω–∞—Ç—É.\n
–î–ª—è –æ—Ç–º–µ–Ω—ã –ª—é–±—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–ø–∏—à–∏—Ç–µ '–æ—Ç–º–µ–Ω–∞' –∏–ª–∏ (/cancel).
        """
    await message.answer(mes,
        reply_markup=keyboard
    )


async def cmd_cancel(message: types.Message, state: FSMContext):
    await state.finish()
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    user = User(str(message.from_user.id))
    if user.get_user():
        buttons = room_buttons
        keyboard.add(*buttons)
        await message.answer(f"–í—ã –≤ –∫–æ–º–Ω–∞—Ç–µ\nüö™ {user.current_room.split(' ')[0]}", reply_markup=keyboard)
    else:
        keyboard = types.ReplyKeyboardRemove()
        await message.answer("[–û—Ç–º–µ–Ω—è—é]", reply_markup=keyboard)


def register_handlers_start_bot(dp: Dispatcher):
    dp.register_message_handler(cmd_start, commands="start", state="*")
    dp.register_message_handler(cmd_cancel, commands="cancel", state="*")
    dp.register_message_handler(cmd_cancel, Text(equals=["–æ—Ç–º–µ–Ω–∞", '–í–µ—Ä–Ω—É—Ç—å—Å—è', '–Ω–∞–∑–∞–¥'], ignore_case=True), state="*")
